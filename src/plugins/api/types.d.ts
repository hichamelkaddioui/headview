/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/apikey": {
    get: operations["HeadscaleService_ListApiKeys"];
    /** --- ApiKeys start --- */
    post: operations["HeadscaleService_CreateApiKey"];
  };
  "/api/v1/apikey/expire": {
    post: operations["HeadscaleService_ExpireApiKey"];
  };
  "/api/v1/debug/node": {
    /** --- Node start --- */
    post: operations["HeadscaleService_DebugCreateNode"];
  };
  "/api/v1/node": {
    get: operations["HeadscaleService_ListNodes"];
  };
  "/api/v1/node/register": {
    post: operations["HeadscaleService_RegisterNode"];
  };
  "/api/v1/node/{nodeId}": {
    get: operations["HeadscaleService_GetNode"];
    delete: operations["HeadscaleService_DeleteNode"];
  };
  "/api/v1/node/{nodeId}/expire": {
    post: operations["HeadscaleService_ExpireNode"];
  };
  "/api/v1/node/{nodeId}/rename/{newName}": {
    post: operations["HeadscaleService_RenameNode"];
  };
  "/api/v1/node/{nodeId}/routes": {
    get: operations["HeadscaleService_GetNodeRoutes"];
  };
  "/api/v1/node/{nodeId}/tags": {
    post: operations["HeadscaleService_SetTags"];
  };
  "/api/v1/node/{nodeId}/user": {
    post: operations["HeadscaleService_MoveNode"];
  };
  "/api/v1/preauthkey": {
    get: operations["HeadscaleService_ListPreAuthKeys"];
    /** --- PreAuthKeys start --- */
    post: operations["HeadscaleService_CreatePreAuthKey"];
  };
  "/api/v1/preauthkey/expire": {
    post: operations["HeadscaleService_ExpirePreAuthKey"];
  };
  "/api/v1/routes": {
    /** --- Route start --- */
    get: operations["HeadscaleService_GetRoutes"];
  };
  "/api/v1/routes/{routeId}": {
    delete: operations["HeadscaleService_DeleteRoute"];
  };
  "/api/v1/routes/{routeId}/disable": {
    post: operations["HeadscaleService_DisableRoute"];
  };
  "/api/v1/routes/{routeId}/enable": {
    post: operations["HeadscaleService_EnableRoute"];
  };
  "/api/v1/user": {
    get: operations["HeadscaleService_ListUsers"];
    post: operations["HeadscaleService_CreateUser"];
  };
  "/api/v1/user/{name}": {
    /** --- User start --- */
    get: operations["HeadscaleService_GetUser"];
    delete: operations["HeadscaleService_DeleteUser"];
  };
  "/api/v1/user/{oldName}/rename/{newName}": {
    post: operations["HeadscaleService_RenameUser"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    protobufAny: {
      "@type"?: string;
      [key: string]: Record<string, never> | undefined;
    };
    rpcStatus: {
      /** Format: int32 */
      code?: number;
      message?: string;
      details?: components["schemas"]["protobufAny"][];
    };
    v1ApiKey: {
      /** Format: uint64 */
      id?: string;
      prefix?: string;
      /** Format: date-time */
      expiration?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      lastSeen?: string;
    };
    v1CreateApiKeyRequest: {
      /** Format: date-time */
      expiration?: string;
    };
    v1CreateApiKeyResponse: {
      apiKey?: string;
    };
    v1CreatePreAuthKeyRequest: {
      user?: string;
      reusable?: boolean;
      ephemeral?: boolean;
      /** Format: date-time */
      expiration?: string;
      aclTags?: string[];
    };
    v1CreatePreAuthKeyResponse: {
      preAuthKey?: components["schemas"]["v1PreAuthKey"];
    };
    v1CreateUserRequest: {
      name?: string;
    };
    v1CreateUserResponse: {
      user?: components["schemas"]["v1User"];
    };
    v1DebugCreateNodeRequest: {
      user?: string;
      key?: string;
      name?: string;
      routes?: string[];
    };
    v1DebugCreateNodeResponse: {
      node?: components["schemas"]["v1Node"];
    };
    v1DeleteNodeResponse: Record<string, never>;
    v1DeleteRouteResponse: Record<string, never>;
    v1DeleteUserResponse: Record<string, never>;
    v1DisableRouteResponse: Record<string, never>;
    v1EnableRouteResponse: Record<string, never>;
    v1ExpireApiKeyRequest: {
      prefix?: string;
    };
    v1ExpireApiKeyResponse: Record<string, never>;
    v1ExpireNodeResponse: {
      node?: components["schemas"]["v1Node"];
    };
    v1ExpirePreAuthKeyRequest: {
      user?: string;
      key?: string;
    };
    v1ExpirePreAuthKeyResponse: Record<string, never>;
    v1GetNodeResponse: {
      node?: components["schemas"]["v1Node"];
    };
    v1GetNodeRoutesResponse: {
      routes?: components["schemas"]["v1Route"][];
    };
    v1GetRoutesResponse: {
      routes?: components["schemas"]["v1Route"][];
    };
    v1GetUserResponse: {
      user?: components["schemas"]["v1User"];
    };
    v1ListApiKeysResponse: {
      apiKeys?: components["schemas"]["v1ApiKey"][];
    };
    v1ListNodesResponse: {
      nodes?: components["schemas"]["v1Node"][];
    };
    v1ListPreAuthKeysResponse: {
      preAuthKeys?: components["schemas"]["v1PreAuthKey"][];
    };
    v1ListUsersResponse: {
      users?: components["schemas"]["v1User"][];
    };
    v1MoveNodeResponse: {
      node?: components["schemas"]["v1Node"];
    };
    v1Node: {
      /** Format: uint64 */
      id?: string;
      machineKey?: string;
      nodeKey?: string;
      discoKey?: string;
      ipAddresses?: string[];
      name?: string;
      user?: components["schemas"]["v1User"];
      /** Format: date-time */
      lastSeen?: string;
      /** Format: date-time */
      lastSuccessfulUpdate?: string;
      /** Format: date-time */
      expiry?: string;
      preAuthKey?: components["schemas"]["v1PreAuthKey"];
      /** Format: date-time */
      createdAt?: string;
      registerMethod?: components["schemas"]["v1RegisterMethod"];
      forcedTags?: string[];
      invalidTags?: string[];
      validTags?: string[];
      givenName?: string;
      online?: boolean;
    };
    v1PreAuthKey: {
      user?: string;
      id?: string;
      key?: string;
      reusable?: boolean;
      ephemeral?: boolean;
      used?: boolean;
      /** Format: date-time */
      expiration?: string;
      /** Format: date-time */
      createdAt?: string;
      aclTags?: string[];
    };
    /**
     * @default REGISTER_METHOD_UNSPECIFIED
     * @enum {string}
     */
    v1RegisterMethod: "REGISTER_METHOD_UNSPECIFIED" | "REGISTER_METHOD_AUTH_KEY" | "REGISTER_METHOD_CLI" | "REGISTER_METHOD_OIDC";
    v1RegisterNodeResponse: {
      node?: components["schemas"]["v1Node"];
    };
    v1RenameNodeResponse: {
      node?: components["schemas"]["v1Node"];
    };
    v1RenameUserResponse: {
      user?: components["schemas"]["v1User"];
    };
    v1Route: {
      /** Format: uint64 */
      id?: string;
      node?: components["schemas"]["v1Node"];
      prefix?: string;
      advertised?: boolean;
      enabled?: boolean;
      isPrimary?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      /** Format: date-time */
      deletedAt?: string;
    };
    v1SetTagsResponse: {
      node?: components["schemas"]["v1Node"];
    };
    v1User: {
      id?: string;
      name?: string;
      /** Format: date-time */
      createdAt?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  HeadscaleService_ListApiKeys: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListApiKeysResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- ApiKeys start --- */
  HeadscaleService_CreateApiKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1CreateApiKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1CreateApiKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ExpireApiKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1ExpireApiKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ExpireApiKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- Node start --- */
  HeadscaleService_DebugCreateNode: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1DebugCreateNodeRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DebugCreateNodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ListNodes: {
    parameters: {
      query?: {
        user?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListNodesResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_RegisterNode: {
    parameters: {
      query?: {
        user?: string;
        key?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1RegisterNodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_GetNode: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetNodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DeleteNode: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DeleteNodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ExpireNode: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ExpireNodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_RenameNode: {
    parameters: {
      path: {
        nodeId: string;
        newName: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1RenameNodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_GetNodeRoutes: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetNodeRoutesResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_SetTags: {
    parameters: {
      path: {
        nodeId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          tags?: string[];
        };
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1SetTagsResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_MoveNode: {
    parameters: {
      query?: {
        user?: string;
      };
      path: {
        nodeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1MoveNodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ListPreAuthKeys: {
    parameters: {
      query?: {
        user?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListPreAuthKeysResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- PreAuthKeys start --- */
  HeadscaleService_CreatePreAuthKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1CreatePreAuthKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1CreatePreAuthKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ExpirePreAuthKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1ExpirePreAuthKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ExpirePreAuthKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- Route start --- */
  HeadscaleService_GetRoutes: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetRoutesResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DeleteRoute: {
    parameters: {
      path: {
        routeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DeleteRouteResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DisableRoute: {
    parameters: {
      path: {
        routeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DisableRouteResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_EnableRoute: {
    parameters: {
      path: {
        routeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1EnableRouteResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ListUsers: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListUsersResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_CreateUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1CreateUserRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1CreateUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- User start --- */
  HeadscaleService_GetUser: {
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DeleteUser: {
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DeleteUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_RenameUser: {
    parameters: {
      path: {
        oldName: string;
        newName: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1RenameUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
}
