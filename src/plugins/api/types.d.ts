/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/apikey": {
    get: operations["HeadscaleService_ListApiKeys"];
    /** --- ApiKeys start --- */
    post: operations["HeadscaleService_CreateApiKey"];
  };
  "/api/v1/apikey/expire": {
    post: operations["HeadscaleService_ExpireApiKey"];
  };
  "/api/v1/debug/machine": {
    /** --- Machine start --- */
    post: operations["HeadscaleService_DebugCreateMachine"];
  };
  "/api/v1/machine": {
    get: operations["HeadscaleService_ListMachines"];
  };
  "/api/v1/machine/register": {
    post: operations["HeadscaleService_RegisterMachine"];
  };
  "/api/v1/machine/{machineId}": {
    get: operations["HeadscaleService_GetMachine"];
    delete: operations["HeadscaleService_DeleteMachine"];
  };
  "/api/v1/machine/{machineId}/expire": {
    post: operations["HeadscaleService_ExpireMachine"];
  };
  "/api/v1/machine/{machineId}/rename/{newName}": {
    post: operations["HeadscaleService_RenameMachine"];
  };
  "/api/v1/machine/{machineId}/routes": {
    get: operations["HeadscaleService_GetMachineRoutes"];
  };
  "/api/v1/machine/{machineId}/tags": {
    post: operations["HeadscaleService_SetTags"];
  };
  "/api/v1/machine/{machineId}/user": {
    post: operations["HeadscaleService_MoveMachine"];
  };
  "/api/v1/preauthkey": {
    get: operations["HeadscaleService_ListPreAuthKeys"];
    /** --- PreAuthKeys start --- */
    post: operations["HeadscaleService_CreatePreAuthKey"];
  };
  "/api/v1/preauthkey/expire": {
    post: operations["HeadscaleService_ExpirePreAuthKey"];
  };
  "/api/v1/routes": {
    /** --- Route start --- */
    get: operations["HeadscaleService_GetRoutes"];
  };
  "/api/v1/routes/{routeId}": {
    delete: operations["HeadscaleService_DeleteRoute"];
  };
  "/api/v1/routes/{routeId}/disable": {
    post: operations["HeadscaleService_DisableRoute"];
  };
  "/api/v1/routes/{routeId}/enable": {
    post: operations["HeadscaleService_EnableRoute"];
  };
  "/api/v1/user": {
    get: operations["HeadscaleService_ListUsers"];
    post: operations["HeadscaleService_CreateUser"];
  };
  "/api/v1/user/{name}": {
    /** --- User start --- */
    get: operations["HeadscaleService_GetUser"];
    delete: operations["HeadscaleService_DeleteUser"];
  };
  "/api/v1/user/{oldName}/rename/{newName}": {
    post: operations["HeadscaleService_RenameUser"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    protobufAny: {
      "@type"?: string;
      [key: string]: Record<string, never> | undefined;
    };
    rpcStatus: {
      /** Format: int32 */
      code?: number;
      message?: string;
      details?: components["schemas"]["protobufAny"][];
    };
    v1ApiKey: {
      /** Format: uint64 */
      id?: string;
      prefix?: string;
      /** Format: date-time */
      expiration?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      lastSeen?: string;
    };
    v1CreateApiKeyRequest: {
      /** Format: date-time */
      expiration?: string;
    };
    v1CreateApiKeyResponse: {
      apiKey?: string;
    };
    v1CreatePreAuthKeyRequest: {
      user?: string;
      reusable?: boolean;
      ephemeral?: boolean;
      /** Format: date-time */
      expiration?: string;
      aclTags?: string[];
    };
    v1CreatePreAuthKeyResponse: {
      preAuthKey?: components["schemas"]["v1PreAuthKey"];
    };
    v1CreateUserRequest: {
      name?: string;
    };
    v1CreateUserResponse: {
      user?: components["schemas"]["v1User"];
    };
    v1DebugCreateMachineRequest: {
      user?: string;
      key?: string;
      name?: string;
      routes?: string[];
    };
    v1DebugCreateMachineResponse: {
      machine?: components["schemas"]["v1Machine"];
    };
    v1DeleteMachineResponse: Record<string, never>;
    v1DeleteRouteResponse: Record<string, never>;
    v1DeleteUserResponse: Record<string, never>;
    v1DisableRouteResponse: Record<string, never>;
    v1EnableRouteResponse: Record<string, never>;
    v1ExpireApiKeyRequest: {
      prefix?: string;
    };
    v1ExpireApiKeyResponse: Record<string, never>;
    v1ExpireMachineResponse: {
      machine?: components["schemas"]["v1Machine"];
    };
    v1ExpirePreAuthKeyRequest: {
      user?: string;
      key?: string;
    };
    v1ExpirePreAuthKeyResponse: Record<string, never>;
    v1GetMachineResponse: {
      machine?: components["schemas"]["v1Machine"];
    };
    v1GetMachineRoutesResponse: {
      routes?: components["schemas"]["v1Route"][];
    };
    v1GetRoutesResponse: {
      routes?: components["schemas"]["v1Route"][];
    };
    v1GetUserResponse: {
      user?: components["schemas"]["v1User"];
    };
    v1ListApiKeysResponse: {
      apiKeys?: components["schemas"]["v1ApiKey"][];
    };
    v1ListMachinesResponse: {
      machines?: components["schemas"]["v1Machine"][];
    };
    v1ListPreAuthKeysResponse: {
      preAuthKeys?: components["schemas"]["v1PreAuthKey"][];
    };
    v1ListUsersResponse: {
      users?: components["schemas"]["v1User"][];
    };
    v1Machine: {
      /** Format: uint64 */
      id?: string;
      machineKey?: string;
      nodeKey?: string;
      discoKey?: string;
      ipAddresses?: string[];
      name?: string;
      user?: components["schemas"]["v1User"];
      /** Format: date-time */
      lastSeen?: string;
      /** Format: date-time */
      lastSuccessfulUpdate?: string;
      /** Format: date-time */
      expiry?: string;
      preAuthKey?: components["schemas"]["v1PreAuthKey"];
      /** Format: date-time */
      createdAt?: string;
      registerMethod?: components["schemas"]["v1RegisterMethod"];
      forcedTags?: string[];
      invalidTags?: string[];
      validTags?: string[];
      givenName?: string;
      online?: boolean;
    };
    v1MoveMachineResponse: {
      machine?: components["schemas"]["v1Machine"];
    };
    v1PreAuthKey: {
      user?: string;
      id?: string;
      key?: string;
      reusable?: boolean;
      ephemeral?: boolean;
      used?: boolean;
      /** Format: date-time */
      expiration?: string;
      /** Format: date-time */
      createdAt?: string;
      aclTags?: string[];
    };
    v1RegisterMachineResponse: {
      machine?: components["schemas"]["v1Machine"];
    };
    /**
     * @default REGISTER_METHOD_UNSPECIFIED
     * @enum {string}
     */
    v1RegisterMethod:
      | "REGISTER_METHOD_UNSPECIFIED"
      | "REGISTER_METHOD_AUTH_KEY"
      | "REGISTER_METHOD_CLI"
      | "REGISTER_METHOD_OIDC";
    v1RenameMachineResponse: {
      machine?: components["schemas"]["v1Machine"];
    };
    v1RenameUserResponse: {
      user?: components["schemas"]["v1User"];
    };
    v1Route: {
      /** Format: uint64 */
      id?: string;
      machine?: components["schemas"]["v1Machine"];
      prefix?: string;
      advertised?: boolean;
      enabled?: boolean;
      isPrimary?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      /** Format: date-time */
      deletedAt?: string;
    };
    v1SetTagsResponse: {
      machine?: components["schemas"]["v1Machine"];
    };
    v1User: {
      id?: string;
      name?: string;
      /** Format: date-time */
      createdAt?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  HeadscaleService_ListApiKeys: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListApiKeysResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- ApiKeys start --- */
  HeadscaleService_CreateApiKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1CreateApiKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1CreateApiKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ExpireApiKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1ExpireApiKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ExpireApiKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- Machine start --- */
  HeadscaleService_DebugCreateMachine: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1DebugCreateMachineRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DebugCreateMachineResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ListMachines: {
    parameters: {
      query?: {
        user?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListMachinesResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_RegisterMachine: {
    parameters: {
      query?: {
        user?: string;
        key?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1RegisterMachineResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_GetMachine: {
    parameters: {
      path: {
        machineId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetMachineResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DeleteMachine: {
    parameters: {
      path: {
        machineId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DeleteMachineResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ExpireMachine: {
    parameters: {
      path: {
        machineId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ExpireMachineResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_RenameMachine: {
    parameters: {
      path: {
        machineId: string;
        newName: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1RenameMachineResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_GetMachineRoutes: {
    parameters: {
      path: {
        machineId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetMachineRoutesResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_SetTags: {
    parameters: {
      path: {
        machineId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          tags?: string[];
        };
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1SetTagsResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_MoveMachine: {
    parameters: {
      query?: {
        user?: string;
      };
      path: {
        machineId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1MoveMachineResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ListPreAuthKeys: {
    parameters: {
      query?: {
        user?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListPreAuthKeysResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- PreAuthKeys start --- */
  HeadscaleService_CreatePreAuthKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1CreatePreAuthKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1CreatePreAuthKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ExpirePreAuthKey: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1ExpirePreAuthKeyRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ExpirePreAuthKeyResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- Route start --- */
  HeadscaleService_GetRoutes: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetRoutesResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DeleteRoute: {
    parameters: {
      path: {
        routeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DeleteRouteResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DisableRoute: {
    parameters: {
      path: {
        routeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DisableRouteResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_EnableRoute: {
    parameters: {
      path: {
        routeId: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1EnableRouteResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_ListUsers: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1ListUsersResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_CreateUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["v1CreateUserRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1CreateUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  /** --- User start --- */
  HeadscaleService_GetUser: {
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1GetUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_DeleteUser: {
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1DeleteUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
  HeadscaleService_RenameUser: {
    parameters: {
      path: {
        oldName: string;
        newName: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "application/json": components["schemas"]["v1RenameUserResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "application/json": components["schemas"]["rpcStatus"];
        };
      };
    };
  };
}
